//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaFramework_UnityWebRequestHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaFramework.UnityWebRequestHelper), typeof(System.Object));
		L.RegFunction("AddData", AddData);
		L.RegFunction("AddBytes", AddBytes);
		L.RegFunction("GetFileBytes", GetFileBytes);
		L.RegFunction("StartReq", StartReq);
		L.RegFunction("GetUrl", GetUrl);
		L.RegFunction("New", _CreateLuaFramework_UnityWebRequestHelper);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLuaFramework_UnityWebRequestHelper(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				LuaFunction arg3 = ToLua.CheckLuaFunction(L, 4);
				LuaFramework.UnityWebRequestHelper obj = new LuaFramework.UnityWebRequestHelper(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: LuaFramework.UnityWebRequestHelper.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaFramework.UnityWebRequestHelper obj = (LuaFramework.UnityWebRequestHelper)ToLua.CheckObject<LuaFramework.UnityWebRequestHelper>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.AddData(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddBytes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaFramework.UnityWebRequestHelper obj = (LuaFramework.UnityWebRequestHelper)ToLua.CheckObject<LuaFramework.UnityWebRequestHelper>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.AddBytes(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFileBytes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.UnityWebRequestHelper obj = (LuaFramework.UnityWebRequestHelper)ToLua.CheckObject<LuaFramework.UnityWebRequestHelper>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.GetFileBytes(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartReq(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.UnityWebRequestHelper obj = (LuaFramework.UnityWebRequestHelper)ToLua.CheckObject<LuaFramework.UnityWebRequestHelper>(L, 1);
			obj.StartReq();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUrl(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.UnityWebRequestHelper obj = (LuaFramework.UnityWebRequestHelper)ToLua.CheckObject<LuaFramework.UnityWebRequestHelper>(L, 1);
			string o = obj.GetUrl();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

