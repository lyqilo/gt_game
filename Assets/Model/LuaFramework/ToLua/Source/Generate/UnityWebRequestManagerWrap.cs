//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityWebRequestManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityWebRequestManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("GetText", GetText);
		L.RegFunction("DownloadFile", DownloadFile);
		L.RegFunction("DownloadContinueFile", DownloadContinueFile);
		L.RegFunction("GetTexture", GetTexture);
		L.RegFunction("GetAssetBundle", GetAssetBundle);
		L.RegFunction("GetAudioClip", GetAudioClip);
		L.RegFunction("Post", Post);
		L.RegFunction("_DownloadFile", _DownloadFile);
		L.RegFunction("_DownloadContinueFile", _DownloadContinueFile);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetText(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				UnityWebRequestManager obj = (UnityWebRequestManager)ToLua.CheckObject<UnityWebRequestManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				obj.GetText(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				UnityWebRequestManager obj = (UnityWebRequestManager)ToLua.CheckObject<UnityWebRequestManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
				FormData arg2 = (FormData)ToLua.CheckObject<FormData>(L, 4);
				LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
				obj.GetText(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityWebRequestManager.GetText");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DownloadFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UnityWebRequestManager obj = (UnityWebRequestManager)ToLua.CheckObject<UnityWebRequestManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
			obj.DownloadFile(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DownloadContinueFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UnityWebRequestManager obj = (UnityWebRequestManager)ToLua.CheckObject<UnityWebRequestManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
			obj.DownloadContinueFile(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTexture(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UnityWebRequestManager obj = (UnityWebRequestManager)ToLua.CheckObject<UnityWebRequestManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
			obj.GetTexture(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAssetBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UnityWebRequestManager obj = (UnityWebRequestManager)ToLua.CheckObject<UnityWebRequestManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
			obj.GetAssetBundle(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAudioClip(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				UnityWebRequestManager obj = (UnityWebRequestManager)ToLua.CheckObject<UnityWebRequestManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				obj.GetAudioClip(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				UnityWebRequestManager obj = (UnityWebRequestManager)ToLua.CheckObject<UnityWebRequestManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				UnityEngine.AudioType arg3 = (UnityEngine.AudioType)ToLua.CheckObject(L, 5, typeof(UnityEngine.AudioType));
				obj.GetAudioClip(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityWebRequestManager.GetAudioClip");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Post(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UnityWebRequestManager obj = (UnityWebRequestManager)ToLua.CheckObject<UnityWebRequestManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			FormData arg2 = (FormData)ToLua.CheckObject<FormData>(L, 4);
			LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
			obj.Post(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _DownloadFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UnityWebRequestManager obj = (UnityWebRequestManager)ToLua.CheckObject<UnityWebRequestManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
			System.Collections.IEnumerator o = obj._DownloadFile(arg0, arg1, arg2, arg3);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _DownloadContinueFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UnityWebRequestManager obj = (UnityWebRequestManager)ToLua.CheckObject<UnityWebRequestManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
			System.Collections.IEnumerator o = obj._DownloadContinueFile(arg0, arg1, arg2, arg3);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityWebRequestManager.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

