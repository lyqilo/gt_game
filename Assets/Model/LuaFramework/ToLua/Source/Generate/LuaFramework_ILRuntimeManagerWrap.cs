//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaFramework_ILRuntimeManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaFramework.ILRuntimeManager), typeof(Manager));
		L.RegFunction("OnInitialize", OnInitialize);
		L.RegFunction("LeaveGame", LeaveGame);
		L.RegFunction("LoadHotFix", LoadHotFix);
		L.RegFunction("EnterGame", EnterGame);
		L.RegFunction("UnInitialize", UnInitialize);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("AesKey", get_AesKey, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInitialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.ILRuntimeManager obj = (LuaFramework.ILRuntimeManager)ToLua.CheckObject<LuaFramework.ILRuntimeManager>(L, 1);
			obj.OnInitialize();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LeaveGame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.ILRuntimeManager obj = (LuaFramework.ILRuntimeManager)ToLua.CheckObject<LuaFramework.ILRuntimeManager>(L, 1);
			obj.LeaveGame();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadHotFix(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaFramework.ILRuntimeManager obj = (LuaFramework.ILRuntimeManager)ToLua.CheckObject<LuaFramework.ILRuntimeManager>(L, 1);
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
			obj.LoadHotFix(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnterGame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.ILRuntimeManager obj = (LuaFramework.ILRuntimeManager)ToLua.CheckObject<LuaFramework.ILRuntimeManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.EnterGame(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnInitialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.ILRuntimeManager obj = (LuaFramework.ILRuntimeManager)ToLua.CheckObject<LuaFramework.ILRuntimeManager>(L, 1);
			obj.UnInitialize();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AesKey(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, LuaFramework.ILRuntimeManager.AesKey);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

